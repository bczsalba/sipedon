[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "Sipedon"
description = """An interactive fishtank for your terminal."""

authors = [
  { name = "bczsalba", email = "bczsalba@gmail.com" },
]
license = "MIT"

requires-python = ">=3.8"
dependencies = ["pytermgui"]

keywords = [
    "terminal",
    "simulation",
    "aquarium",
    "fishtank",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Games/Entertainment",
  "Topic :: Games/Entertainment :: Simulation",
  "Topic :: Terminals",
  "Typing :: Typed"
]

dynamic = ["readme", "version"]

[project.urls]
homepage = "https://github.com/bczsalba/sipedon"
repository = "https://github.com/bczsalba/sipedon"

[project.scripts]
sipedon = "sipedon:__main__.main"

[tool.hatch.version]
path = "sipedon/__init__.py"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
end-before = "\n<!-- HATCH README END -->"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = """

## Latest release

#"""

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
end-before = "\n<!-- HATCH README END -->"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
text = "\n\nRead the full changelog [here](https://github.com/bczsalba/pytermgui/blob/master/CHANGELOG.md).\n\n"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"
start-after = "\n<!-- HATCH URI DEFINITIONS START -->"

[tool.mypy]
show_error_codes = true

[tool.pylint.messages_control]
disable = [
    "fixme",
    # If this is a problem, it should occur during runtime
    "not-callable"
]

[tool.pylint.basic]
good-names = ["i", "j", "k", "ex", "Run", "_", "x" ,"y", "fd"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "def __fancy_repr__",
    "def __repr__",
]

[tool.isort]
profile = "black"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=sipedon --cov=tests"
no-cov = "cov --no-cov"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "sipedon/__about__.py",
]
